# empty memory
rm(list=ls())
link_home_model<- "https://github.com/flagellumdei90/datachallange/blob/main/04_output/home_model.rda?raw=true"
home_model <- readRDS(url(link_home_model))
link_away_model<- "https://github.com/flagellumdei90/datachallange/blob/main/04_output/away_model.rda?raw=true"
away_model <- readRDS(url(link_away_model))
link_draw_model<- "https://github.com/flagellumdei90/datachallange/blob/main/04_output/draw_model.rda?raw=true"
draw_model <- readRDS(url(link_draw_model))
# Create modell_input tables
# Load data
data <- as.data.table(read_excel(paste0(data_in, "competition_table.xlsx")))
# Load packages
# library("tidyverse") # imap function for roc curve
library("data.table") # to use data in an efficient way
# Create modell_input tables
# Load data
data <- as.data.table(read_excel(paste0(data_in, "competition_table.xlsx")))
library("readxl") # to read xlsx data
# Create modell_input tables
# Load data
data <- as.data.table(read_excel(paste0(data_in, "competition_table.xlsx")))
# Set the working directory
dir <-  "/Users/attilagulyas/Documents/GitHub/DataChallenge2023/"
#location folders
data_in <- paste0(dir,"01_raw/")
# Create modell_input tables
# Load data
data <- as.data.table(read_excel(paste0(data_in, "competition_table.xlsx")))
# Create modell_input table
model_input <- data[,-c("home_win_flag", "draw_flag", "away_win_flag")]
# Predict
predicted_home_win <- predict(home_model,
newdata = model_input,
type = "prob")[["yes"]]
predicted_away_win <- predict(away_model,
newdata = model_input,
type = "prob")[["yes"]]
predicted_draw_win <- predict(draw_model,
newdata = model_input,
type = "prob")[["yes"]]
# Create Prediction table output
prediction_table <- cbind(predicted_home_win, predicted_away_win, predicted_draw_win)
View(prediction_table)
# Create Prediction table output
prediction_table <- cbind(home_win = predicted_home_win, predicted_away_win, predicted_draw_win)
# Create Prediction table output
prediction_table <- cbind(home_win_p1 = predicted_home_win,
away_win_p1 = predicted_away_win,
draw_p1 = predicted_draw_win)
View(prediction_table)
# Get mach_id-s
match_id_list <- model_input$match_id
# Create Prediction table output
prediction_table <- cbind(match_id = match_id_list,
home_win_p1 = predicted_home_win,
away_win_p1 = predicted_away_win,
draw_p1 = predicted_draw_win)
View(prediction_table)
View(data)
?write.csv
# Save csv
write.csv(prediction_table, data_out, sep = ";", fileEncoding = "UTF8")
data_out <- paste0(dir,"04_output/") # prediction output folder
# Save csv
write.csv(prediction_table, data_out, sep = ";", fileEncoding = "UTF8")
# Save csv
write.csv(prediction_table, file = paste0(data_out, "bellavita.csv"), sep = ";", fileEncoding = "UTF8")
